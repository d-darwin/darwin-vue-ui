/* Contains development styles to visualize independent grid. */
@import "./tokens/breakpoints";

body.__debug::before {
  position: fixed;
  content: "";
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0 auto;
  pointer-events: none;
  z-index: 9999;

  // mobile values
  --grid-columns-count: 2;
  --grid-offset: 18px;
  --grid-gutter: 18px;

  --grid-width: calc(100% - var(--grid-offset) * 2);
  --grid-column-color: rgba(0, 0, 0, 0.05);
  --grid-gutter-color: transparent;
  --grid-column-width: calc(
    (100% - var(--grid-gutter) * var(--grid-columns-count)) /
      var(--grid-columns-count)
  );

  width: calc(var(--grid-width) + var(--grid-offset) * 2);

  border: solid transparent;
  border-width: 0 calc(var(--grid-offset) - var(--grid-gutter) / 2);

  background-repeat: no-repeat;
  //noinspection CssInvalidFunction
  background-image: repeating-linear-gradient(
    to right,
    var(--grid-gutter-color) 0,
    var(--grid-gutter-color) calc(var(--grid-gutter) / 2),
    var(--grid-column-color) calc(var(--grid-gutter) / 2),
    var(--grid-column-color)
      calc(var(--grid-column-width) + var(--grid-gutter) / 2),
    var(--grid-gutter-color)
      calc(var(--grid-column-width) + var(--grid-gutter) / 2),
    var(--grid-gutter-color) calc(var(--grid-column-width) + var(--grid-gutter))
  );
}

@media (min-width: $sm-breakpoint) {
  body.__debug::before {
    --grid-columns-count: 6;
  }
}

@media (min-width: $md-breakpoint) {
  body.__debug::before {
    --grid-columns-count: 12;
    --grid-offset: 24px;
    --grid-gutter: 24px;
  }
}

@media (min-width: $lg-breakpoint) {
  body.__debug::before {
    --grid-width: 960px;
  }
}

@media (min-width: $xl-breakpoint) {
  body.__debug::before {
    --grid-width: 1140px;
  }
}

@media (min-width: $xxl-breakpoint) {
  body.__debug::before {
    --grid-width: 1320px;
  }
}
